name: Deploy to self-hosted (prod)

on:
  push:
    branches: [ prod ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Ensure OS deps (rsync)
        run: |
          if ! command -v rsync >/dev/null; then
            sudo apt-get update && sudo apt-get install -y rsync
          fi

      - name: Install deps (for build)
        run: npm ci

      - name: Build (SSR)
        run: npm run build

      # ---- Deploy to /opt/nnp-web ----
      - name: Stage deploy to /opt/nnp-web
        run: |
          #sudo mkdir -p /opt/nnp-web
          # copy only what runtime needs; keep it clean each deploy
          rsync -a --delete build/ /opt/nnp-web/build/
          install -m 0644 package.json package-lock.json /opt/nnp-web/
          # make sure runner user can manage files with pm2
          sudo chown -R "$USER":"$USER" /opt/nnp-web

      - name: Install runtime deps (prod only)
        working-directory: /opt/nnp-web
        run: npm ci --omit=dev

      # ---- PM2 section ----
      - name: Ensure PM2 installed
        run: |
          if ! command -v pm2 >/dev/null; then
            npm i -g pm2
          fi
          pm2 -v

      - name: Restart app with PM2
        working-directory: /opt/nnp-web
        env:
          PORT: 3000
          NODE_ENV: production
        run: |
          # stop old instance if exists (ignore error)
          pm2 delete nnp-web || true
          # start SSR server via react-router-serve
          pm2 start "npx --yes react-router-serve ./build/server/index.js --port=${PORT}" --name nnp-web --update-env
          pm2 save

      # (First time only; safe to run repeatedly)
      - name: Enable PM2 on boot (idempotent)
        run: |
          sudo pm2 startup systemd -u "$USER" --hp "$HOME" || true
