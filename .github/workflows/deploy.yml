name: Deploy to self-hosted (prod)

on:
  push:
    branches: [ prod ]

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      DEPLOY_DIR: /opt/nnp-web   # must already exist and be owned by the runner user
      PORT: 3000
      NODE_ENV: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Ensure rsync present
        run: |
          if ! command -v rsync >/dev/null; then
            echo "rsync not found; install it once on the runner: sudo apt-get install -y rsync"
            exit 1
          fi

      # Build workspace uses install (so new devDeps like tailwind v4 plugin resolve even if lock isn't updated yet)
      - name: Install deps (for build)
        run: npm install --no-audit --no-fund

      - name: Build (SSR)
        run: npm run build

      # ---- Deploy to $DEPLOY_DIR (must already exist; we do NOT create it) ----
      - name: Stage deploy
        run: |
          if [ ! -d "$DEPLOY_DIR" ]; then
            echo "❌ Deploy directory $DEPLOY_DIR does not exist."
            echo "Create it once on the runner and give ownership to the runner user, e.g.:"
            echo "  sudo mkdir -p $DEPLOY_DIR && sudo chown -R $(whoami):$(whoami) $DEPLOY_DIR"
            exit 1
          fi

          # sync build output
          rsync -a --delete build/ "$DEPLOY_DIR/build/"

          # sync manifests needed for runtime install
          rsync -a package.json package-lock.json "$DEPLOY_DIR/"

      # Runtime install in the deployed directory (omit dev deps)
      - name: Install runtime deps (prod only)
        working-directory: ${{ env.DEPLOY_DIR }}
        run: npm install --omit=dev --no-audit --no-fund

      # ---- PM2 section ----
      - name: Ensure PM2 installed
        run: |
          if ! command -v pm2 >/dev/null; then
            npm i -g pm2
          fi
          pm2 -v

      - name: Restart app with PM2
        working-directory: ${{ env.DEPLOY_DIR }}
        run: |
          pm2 delete nnp-web || true
          pm2 start "npx --yes react-router-serve ./build/server/index.js --port=${PORT}" \
            --name nnp-web --update-env
          pm2 save
